@mixin banner {
    width: 100%;
    position: relative;
    color: white;
    // nested banner
    .banner-content {
        position: absolute;
        top: 50px;
        width: 100%;
    }
    // nested img
    img {
        width: 100%;
    }
    span {
        font-size: $bannerHeading;
        display: block;
        text-transform: uppercase;
        font-weight: bold;
        @include mQ(3000px, 1200px) {
            font-size: 68px;
        }
    }
    span.title {
        font-weight: normal;
        margin-bottom: 30px;
    }
} 

@mixin clearFix {
    &:after {
        content: "";
        display: block;
        clear: both;
    }
}

@mixin grid($cols, $mgn) {
    float: left;
    margin-right: $mgn;
    margin-bottom: $mgn;

    // Helpful way of creating a perfect spacing while using a bunch of columns and rows.
    width: ((100% - (($cols - 1) * $mgn)) / $cols );
    &:nth-child(#{$cols}n) {
        margin-right: 0;
    }
}

// Definitely SHOULD USE for future projects which helps simplify the media queries as you create more complex ones. Use the '@include' keyword along with the keyword name and place them along the element/content that you need to change.
@mixin mQ($arg...) {
    @if length($arg) ==1 {
    @media screen and (max-width: nth($arg, 1)) {
        // IMPORTANT that you add this keyword!
        @content;
    }
    }
    @if length($arg) == 2{
        @media screen and (max-width: nth($arg, 1)) and (min-width: nth($arg, 2)){
        @content;
        }
    }
}

 